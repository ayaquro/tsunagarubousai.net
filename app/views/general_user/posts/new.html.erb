<div class="container mt-5 p-5 card shadow-lg">
  <div class="row">
    <div class="col-6">
      <div class="row m-3">
        <h2 class="col-12 text-center">危険箇所の投稿</h2>
      </div>
      <div class="row">
        <div class="col-6 text-danger">
          <% if @post.errors.any? %>
            <%= @post.errors.count %>件のエラーが発生しました。
          <ul>
            <% @post.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
          <% end %>
        </div>
      </div>
          <!-- form_with部分 -->
          <%#= form_with model: @post, url: '/posts',method: :post do |f| %>
      <%= form_with model: @post do |f| %>
      <div class="row m-2">
        <h5 class="col-3 text-center">投稿画像</h5>
        <div class="col-9">
          <%= f.file_field :posted_image, accept: "image/*" %>
          <!--画像ファイルしか投稿できないようにaccept: "image/*"を記載-->
        </div>
      </div>
      <div class="row m-2">
        <h5 class="col-3 text-center">タイトル</h5>
        <div class="col-7">
          <%= f.text_field :posted_title, class: "form-control" %>
        </div>
      </div>
      <div class="row m-2">
        <h5 class="col-3 text-center">説明</h5>
        <div class="col-7">
          <%= f.text_area :posted_text, class: "form-control" %>
        </div>
      </div>
      <div class="row m-2">
        <h5 class="col-3 text-center">地区選択</h5>
        <div class="col-9">
          <%= f.collection_select(:district_id, @districts, :id, :district_name, {include_blank: "---"}, {}) %>
        </div>
      </div>
      <div class="row m-2">
        <h5 class="col-3 text-center">緯度</h5>
        <div class="col-9">
          <%= f.text_field :lat, :placeholder => "右で検索した緯度が自動出力されます", id: :lat, class: "form-control" %>
        </div>
      </div>
      <div class="row m-2">
        <h5 class="col-3 text-center">経度</h5>
        <div class="col-9">
          <%= f.text_field :lng, :placeholder => "右で検索した経度が自動出力されます", id: :lng, class: "form-control" %>
        </div>
      </div>
      <div class="row m-3">
        <div class="offset-3 col-4">
          <%= f.submit "投稿",class: "btn btn-primary btn-block " %>
        </div>
      </div>
  </div>
    <div class="col-6 mt-5">
      <input id="address" type="textbox" value="いわき市役所">
      <input type="button" value="検索" onclick="codeAddress()">
      <p>目印の建物名（例：いわき市役所）を入れて検索ボタンを押し、出てきたマーカーをドラック＆ドロップで位置の調整ができます。<p>
      <div id ="map"></div>

      <style>
        #map {
          height: 500px;
          width: 500px;
        }
      </style>

      <script>
        //初期マップの設定
        let map
        let marker
        function initMap(){
          geocoder = new google.maps.Geocoder()
          map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 37.0505055, lng:140.8877435},
            zoom: 15,
          });
        }

        //検索後のマップ作成
        let geocoder
        let aft
        function codeAddress(){
          let inputAddress = document.getElementById('address').value;
          geocoder.geocode( { 'address': inputAddress}, function(results, status) {
            if (status == 'OK') {
              // マーカーが複数できないようにする
              if (aft == true){
                marker.setMap(null);
              }
              // 新しくマーカーを作成する
              map.setCenter(results[0].geometry.location);
                marker = new google.maps.Marker({
                  map: map,
                  position: results[0].geometry.location,
                  draggable: true
              });
              // 二度目以降か判断
              aft = true

              // 検索した時に経度緯度を入力する
              document.getElementById('lat').value = results[0].geometry.location.lat();
              document.getElementById('lng').value = results[0].geometry.location.lng();

              // マーカーのドロップ（ドラッグ終了）時のイベント
              google.maps.event.addListener( marker, 'dragend', function(ev){
                // イベントの引数evのプロパティ.latLngが緯度経度
                document.getElementById('lat').value = ev.latLng.lat();
                document.getElementById('lng').value = ev.latLng.lng();
              });
          } else {
            alert('該当する結果がありませんでした:' + status);
          }
          });
        }
      </script>
      <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAP_API_KEY"] %>&callback=initMap" async defer></script>

      <% end %>
    </div>
  </div>
</div>